env.DIST='<%= dist %>'
env.TYPE='<%= type %>'

notify {
    cleanNode('amd64 && persistent') {
        withCredentials([sshUserPrivateKey(credentialsId: 'ssh.jobs.archive.neon', keyFileVariable: 'SSH_KEY_FILE', passphraseVariable: '', usernameVariable: '')]) {
            sh '~/tooling/nci/contain.rb /tooling/nci/fwupd_check.rb'
        }
    }
}

def notify(body) {
    try {
        body()
    } catch (e) {
        <% if notify %>
        stage('notify') {
            mail to: 'neon-notifications@kde.org',
                 subject: "fwupd-signed update needed #${BUILD_NUMBER}",
                 body: """fwupd-signed needs updated to match the new fwupd in Ubuntu. #${BUILD_NUMBER}. ${BUILD_URL}/testReport"""
        }
        <% end %>
        throw e
    }
}

def cleanNode(label = null, body) {
  node(label) {
    deleteDir()
    try {
      wrap([$class: 'AnsiColorBuildWrapper', colorMapName: 'xterm']) {
        wrap([$class: 'TimestamperBuildWrapper']) {
          body()
        }
      }
    } finally {
      step([$class: 'WsCleanup', cleanWhenFailure: true])
    }
  }
}
