<?xml version='1.0' encoding='UTF-8'?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.20">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.dependencyqueue.BlockWhileUpstreamQueuedProperty plugin="dependency-queue-plugin@1.2-SNAPSHOT">
      <blockWhileUpstreamQueued>true</blockWhileUpstreamQueued>
    </org.jenkinsci.plugins.dependencyqueue.BlockWhileUpstreamQueuedProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.8">
      <blockingJobs>^watcher.*</blockingJobs>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>ALL</scanQueueFor>
      <useBuildBlocker>true</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.4">
    <scms>
      <%= render_packaging_scm %>
      <%= render_upstream_scm %>
    </scms>
  </scm>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec></spec>
      <ignorePostCommitHooks><%= render_commit_hook_disabled %></ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>workspace/<%= job_name %>_src</customWorkspace>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.AlwaysRun" plugin="run-condition@1.0"/>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>ls -lah
rm -f workspace.tar
tar -cf workspace.tar .
# This is a disk space saving measure. It's unclear if we still need or want this.
<% if !job_name.include?('_launchpad_') && (job_name.include?('oxygen-icons5') || job_name.include?('breeze') || job_name.include?('wallpapers')) %>
  echo 'wiping git clones'
  rm -rf packaging source
<% end %></command>
        </hudson.tasks.Shell>
        <hudson.tasks.ArtifactArchiver>
          <artifacts>workspace.tar</artifacts>
          <allowEmptyArchive>false</allowEmptyArchive>
          <onlyIfSuccessful>false</onlyIfSuccessful>
          <fingerprint>false</fingerprint>
          <defaultExcludes>true</defaultExcludes>
          <caseSensitive>true</caseSensitive>
        </hudson.tasks.ArtifactArchiver>
        <hudson.tasks.Shell>
          <command>rm -f workspace.tar</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.AlwaysRun" plugin="run-condition@1.0"/>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>printf ${BUILD_TIMESTAMP} &gt; run_stamp</command>
        </hudson.tasks.Shell>
        <hudson.tasks.ArtifactArchiver>
          <artifacts>run_stamp</artifacts>
          <allowEmptyArchive>false</allowEmptyArchive>
          <onlyIfSuccessful>false</onlyIfSuccessful>
          <fingerprint>true</fingerprint>
          <defaultExcludes>true</defaultExcludes>
          <caseSensitive>true</caseSensitive>
        </hudson.tasks.ArtifactArchiver>
        <hudson.tasks.test.AggregatedTestResultPublisher plugin="junit@1.11">
          <jobs><%= jobs.join(', ') %>, </jobs>
          <includeFailedBuilds>true</includeFailedBuilds>
        </hudson.tasks.test.AggregatedTestResultPublisher>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <%= render_phases %>
    <hudson.tasks.Shell>
      <command>
        # Cleanup the artifacts of the last successful builds of our subjobs
        # This preserves disk space by throwing out unnecessary rubbish, such
        # as debs and tarballs.
        ~/tooling/nci/jenkins_job_artifact_cleaner.rb <%= jobs.join(' ') %>
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.25">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs class="empty-list"/>
          <projects><%= dependees.join(', ') %>, </projects>
          <condition>UNSTABLE_OR_BETTER</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
  </buildWrappers>
  <pollSubjobs>false</pollSubjobs>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
