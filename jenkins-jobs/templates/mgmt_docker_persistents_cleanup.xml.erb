<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>a cleanup routine for all persistent builders.  change  the label expression  to match the persistent-builder-* you wish to clean and run script.  if builder is offline, manually bring online after job has started to run and it should be the first job to run on that builder.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.13"/>
    <org.jenkinsci.plugins.dependencyqueue.BlockWhileUpstreamQueuedProperty plugin="dependency-queue-plugin@1.2-SNAPSHOT">
      <blockWhileUpstreamQueued>false</blockWhileUpstreamQueued>
    </org.jenkinsci.plugins.dependencyqueue.BlockWhileUpstreamQueuedProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@166.vc82fc20b_a_ed6">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@3.0.0">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.suryagaddipati.jenkins.SlaveUtilizationProperty plugin="slave-utilization-plugin@1.8">
      <needsExclusiveAccessToNode>false</needsExclusiveAccessToNode>
      <singleInstancePerSlave>false</singleInstancePerSlave>
      <slaveUtilizationPercentage>0</slaveUtilizationPercentage>
    </com.suryagaddipati.jenkins.SlaveUtilizationProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.14">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>persistent-builder-01</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;node name is $NODE_NAME&quot;
export DIST=jammy
echo &quot;cleaning jammy&quot;
/var/lib/jenkins-slave/tooling/nci/workspace_cleaner.rb
export DIST=noble
echo &quot;cleaning noble&quot;
/var/lib/jenkins-slave/tooling/nci/workspace_cleaner.rb
# Only build ubuntu images. Neon needs no debian images.
export PANGEA_UBUNTU_ONLY=1
# run the docker cleanup script
/var/lib/jenkins-slave/tooling/mgmt/docker_cleanup.rb
echo &quot;this debug block is pre systemctl restart docker.service&quot;
echo &quot;whoami -&gt;&quot;
whoami
systemctl show docker.service | grep ExecMainStartTimestamp=
echo &quot;docker system df -&gt;&quot;
docker system df
echo &quot;df -h -&gt;&quot;
df -h
echo &quot;docker ps --size -&gt;&quot;
docker ps --size
# restart docker to free any leaked disk space
if  [ &quot;$NODE_NAME&quot; != &quot;equinix-arm64-01&quot; ]; then
	sudo /usr/bin/systemctl restart docker
	echo &quot;in there are no errors sudo /usr/bin/systemctl restart docker should have just run&quot;
fi
echo &quot;this debug block is post systemctl restart docker.service&quot;
echo &quot;whoami -&gt;&quot;
whoami
systemctl show docker.service | grep ExecMainStartTimestamp=
echo &quot;docker system df -&gt;&quot;
docker system df
echo &quot;df -h -&gt;&quot;
df -h
echo &quot;docker ps --size -&gt;&quot;
docker ps --size
# now roll out new docker container(s)
/var/lib/jenkins-slave/tooling/mgmt/docker.rb
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.27"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@1.0.4">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>
